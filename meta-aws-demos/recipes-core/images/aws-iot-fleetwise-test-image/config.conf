DISTRO = "poky-altcfg"
EXTRA_IMAGE_FEATURES ?= "debug-tweaks"

SDKMACHINE = "x86_64"

IMAGE_INSTALL:append = " aws-iot-fleetwise-edge \
                            can-utils "

CERTIFICATE:pn-aws-iot-fleetwise-edge="-----BEGIN-----\nXXXXX\n-----END-----\n"
PRIVATE_KEY:pn-aws-iot-fleetwise-edge="-----BEGIN-----\nXXXXX\n-----END-----\n"
VEHICLE_NAME:pn-aws-iot-fleetwise-edge="v1"
ENDPOINT_URL:pn-aws-iot-fleetwise-edge="xxx.iot.region.amazonaws.com"
CAN_BUS:pn-aws-iot-fleetwise-edge="vcan0"

# systemd
DISTRO_FEATURES:append = " largefile ptest multiarch systemd"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = ""
VIRTUAL-RUNTIME_syslog = ""

QB_MEM = "-m 2048"

# use slirp networking instead of TAP interface (require root rights)
QEMU_USE_SLIRP = "1"
TEST_SERVER_IP = "127.0.0.1"

# this will specify what test should run when running testimage cmd - oeqa layer tests + ptests:
# Ping and SSH are not required, but do help in debugging. ptest will discover all ptest packages.
TEST_SUITES = " ping ssh ptest parselogs"

IMAGE_INSTALL:append = " ptest-runner ssh"

# this will specify what test should run when running testimage cmd - oeqa layer tests + ptests:
# Ping and SSH are not required, but do help in debugging. ptest will discover all ptest packages.
TEST_SUITES = " ping ssh ptest parselogs"

# this will allow - running testimage cmd: bitbake core-image-minimal -c testimage
IMAGE_CLASSES += "testimage"
