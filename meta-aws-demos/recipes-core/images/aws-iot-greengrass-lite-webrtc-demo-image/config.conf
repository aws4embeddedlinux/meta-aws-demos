DISTRO = "poky-altcfg"

QB_MEM = "-m 2048"
BOOT_SPACE = "69152"

# we are read only, no addition space necessary
IMAGE_OVERHEAD_FACTOR = "1"

BOOT_SPACE = "69152"

DISTRO_FEATURES:append = " rauc"

# we do not use bluetooth at the moment
DISTRO_FEATURES:remove = " bluetooth"

ENABLE_UART = "1"

RPI_USE_U_BOOT = "1"

# PREFERRED_PROVIDER_virtual/bootloader = "u-boot"
WKS_FILE = "${THISDIR}/wic/sdimage-aws-iot-greengrass-lite-demo_partition.wks.in"

# Settings for meta-rauc-raspberry-pi
IMAGE_FSTYPES="ext4 wic.bz2 wic"
IMAGE_INSTALL:append = " rauc"

# just necessary if aws-iot-device-client is installed
PACKAGECONFIG:pn-aws-iot-device-client = "st"

COPY_LIC_MANIFEST = "1"

COPY_LIC_DIRS = "1"

BB_GENERATE_MIRROR_TARBALLS = "1"

BB_GIT_SHALLOW = "1"

BB_GENERATE_SHALLOW_TARBALLS = "1"

INHERIT += "create-spdx"

# add build info to the image
INHERIT += "image-buildinfo"

# if not set, you will have to take care of mount points at two places, with this set image
# partition layout is done in wic file and fstab settings in aws-iot-greengrass-lite-demo-ab-image.bb
WIC_CREATE_EXTRA_ARGS = "--no-fstab-update"

### added for webrtc demo image - to use the camera

# this will enable camera v3 support (bcm2835-unicam)
RASPBERRYPI_CAMERA_V3 = "1"
VIDEO_CAMERA = "1"

# enable to build gst plugins in libcamera
PACKAGECONFIG:append:pn-libcamera = " gst"

# enable opus codec
PACKAGECONFIG:append:pn-gstreamer1.0-plugins-base = " opus"

# enable h264 codec
LICENSE_FLAGS_ACCEPTED += "commercial"
PACKAGECONFIG:append:pn-gstreamer1.0-plugins-ugly = " x264"

# enable credentials for amazon-kvs-webrtc-sdk samples
EXTRA_OECMAKE:append:pn-amazon-kvs-webrtc-sdk = " -DIOT_CORE_ENABLE_CREDENTIALS=ON"
