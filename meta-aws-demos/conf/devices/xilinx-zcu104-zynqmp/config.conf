DISTRO ?= "petalinux"

MACHINE ?= "zcu104-zynqmp"

DISTRO_FEATURES += "systemd"
DISTRO_FEATURES += "virtualization"
DISTRO_FEATURES_BACKFILL_CONSIDERED = "sysvinit"
VIRTUAL-RUNTIME_init_manager = "systemd"
VIRTUAL-RUNTIME_initscripts = ""

BASIC_NET =  "i2c-tools                              \
              python3-smbus                          \
              bridge-utils                           \
              hostapd                                \
              dhcpcd                                 \
              iptables                               \
              wpa-supplicant                         \
              strace                                 \
              "

IMAGE_INSTALL:append = " ${BASIC_NET}"

#do_image[mcdepends] = "multiconfig::pmu:pmu-firmware:do_deploy"

PREFERRED_PROVIDER_virtual/pmufw = "pmufw"
PREFERRED_PROVIDER_virtual/boot-bin = "xilinx-bootbin"
PREFERRED_PROVIDER_virtual/dtb = "device-tree"
PREFERRED_PROVIDER_qemu-native = "qemu-xilinx-native"

#
# Qemu configuration
#
# By default native qemu will build with a builtin VNC server where graphical output can be
# seen. The line below enables the SDL UI frontend too.
PACKAGECONFIG:append:pn-qemu-system-native = " sdl"
# By default libsdl2-native will be built, if you want to use your host's libSDL instead of
# the minimal libsdl built by libsdl2-native then uncomment the ASSUME_PROVIDED line below.
#ASSUME_PROVIDED += "libsdl2-native"

# You can also enable the Gtk UI frontend, which takes somewhat longer to build, but adds
# a handy set of menus for controlling the emulator.
#PACKAGECONFIG:append:pn-qemu-system-native = " gtk+"

#Add below lines to use runqemu for ZU+ machines
PMU_FIRMWARE_DEPLOY_DIR ??= "${DEPLOY_DIR_IMAGE}"
PMU_FIRMWARE_IMAGE_NAME ??= "pmu-firmware-${MACHINE}"

#Enable the below line to use pmu-rom.elf from a specific path
#PMU_ROM = "/proj/yocto/pmu-rom/pmu-rom.elf"

EXTRA_IMAGE_FEATURES ?= "debug-tweaks"